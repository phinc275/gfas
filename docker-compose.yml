version: "3.8"

services:
  gfas:
    image: gfas
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      eventstoredb:
        condition: service_started
      broker:
        condition: service_started
      init-broker:
        condition: service_completed_successfully
      schema-registry:
        condition: service_started
    ports:
      - "127.0.0.1:8088:8088"
    networks:
      - achievement-system

  eventstoredb:
    image: eventstore/eventstore:21.6.0-buster-slim
    user: root
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    volumes:
      - ./eventstore/data:/var/lib/eventstore
      - ./eventstore/log:/var/log/eventstore
    networks:
      - achievement-system
    ports:
      - "2113:2113"

  replicator:
    container_name: repl-replicator
    image: eventstore/replicator:latest
    ports:
      - "5000:5000"
    volumes:
      - ./replicator.yml:/app/config/appsettings.yaml
      - ./transform.js:/app/config/transform.js
      - ./repldata:/app/data
    environment:
      REPLICATOR_DEBUG: 1
    depends_on:
      - eventstoredb
      - broker
      - init-broker
    networks:
      - achievement-system

  broker:
    image: confluentinc/cp-kafka:7.5.2
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_HOST_EXTERNAL:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:19092,PLAINTEXT_HOST_EXTERNAL://${KAFKA_EXTERNAL:-127.0.0.1}:${KAFKA_EXTERNAL_PORT:-9092}'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:19092,PLAINTEXT_HOST_EXTERNAL://0.0.0.0:${KAFKA_EXTERNAL_PORT:-9092}'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'lOo7XJsvQ5eTpxGGhzdFlA'
    networks:
      - achievement-system
    volumes:
      - ./kafkadata/secrets:/etc/kafka/secrets
      - ./kafkadata/data:/var/lib/kafka/data
      - ./kafkadata/logs:/tmp/kraft-combined-logs

  init-broker:
    image: confluentinc/cp-kafka:7.5.2
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker:29092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic events --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic achievements --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic dlancer_topic_production --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic dlancer_topic_dev --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list
      "
    networks:
      - achievement-system

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.2
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8881:8881"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8881
    networks:
      - achievement-system

networks:
  achievement-system:
    name: "achievement-system"